version: "3.8"

services:
  database:
    container_name: adverity-transformer-challenge-database
    image: postgres:9.6-alpine
    environment:
      POSTGRES_DB: transformer
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    container_name: adverity-transformer-challenge-redis
    image: redis:6
    ports:
      - "6379:6379"
    restart: unless-stopped

  celery:
    container_name: adverity-transformer-challenge-celery
    build:
      context: ./backend/
      dockerfile: Dockerfile.development
    image: adverity-transformer-challenge-backend
    environment:
      BROKER_URL: redis://redis:6379
      DATABASE_HOST: database
      DATABASE_USER: postgres
      DATABASE_NAME: transformer
    command: watchmedo auto-restart --pattern '*.py' --signal SIGINT --recursive -- celery -A transformer worker -l debug
    volumes:
      - ./backend/:/home/user/backend/:delegated

  backend:
    container_name: adverity-transformer-challenge-backend
    build:
      context: ./backend/
      dockerfile: Dockerfile.development
    image: adverity-transformer-challenge-backend
    ports:
      - "8000:8000"
    environment:
      BROKER_URL: redis://redis:6379
      DATABASE_HOST: database
      DATABASE_USER: postgres
      DATABASE_NAME: transformer
    volumes:
      - ./backend/:/home/user/backend/:delegated
      - ./frontend/dist:/home/user/backend/frontend/dist:delegated
    depends_on:
      - database
      - redis
      - celery
    command: >
      /bin/sh -c "while ! nc -z database 5432; do sleep 1; done;
                  python ./manage.py migrate &&
                  python ./manage.py runserver --insecure 0.0.0.0:8000"
    restart: on-failure

  frontend:
    container_name: adverity-transformer-challenge-frontend
    build:
      context: ./frontend/
    ports:
      - "3001:3001"
    volumes:
      - ./frontend/:/app
    command: /bin/sh -c "npm install && npm run start"
    depends_on:
      - backend
